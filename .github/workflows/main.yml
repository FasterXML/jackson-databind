name: Build and Deploy Snapshot
on:
  push:
    branches:
    - master
    - "3.0"
    paths-ignore:
    - "README.md"
    - "release-notes/*"
  pull_request:
    branches:
    - master
    - "3.0"
    paths-ignore:
    - "README.md"
    - "release-notes/*"
permissions:
  contents: read

jobs:
  build:
    # Here we DO need "os" option, to include Windows
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        java_version: ['17', '21', '23']
        os: ['ubuntu-22.04']
        include:
          - java_version: '17'
            os: 'ubuntu-22.04'
            release_build: 'R'
          - java_version: '17'
            os: 'windows-latest'
            is_windows: 'W'
    env:
      JAVA_OPTS: "-XX:+TieredCompilation -XX:TieredStopAtLevel=1"
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: Set up JDK
      uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4.7.0
      with:
        distribution: 'temurin'
        java-version: ${{ matrix.java_version }}
        cache: 'maven'
        server-id: sonatype-nexus-snapshots-new
        server-username: CI_DEPLOY_USERNAME
        server-password: CI_DEPLOY_PASSWORD
        # See https://github.com/actions/setup-java/blob/v2/docs/advanced-usage.md#Publishing-using-Apache-Maven
        # gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
        # gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase
    - name: Build
      run: ./mvnw -B -ff -ntp verify
    - name: Extract project Maven version
      id: projectVersion
      if: ${{ !matrix.is_windows }}
      run: echo "version=$(./mvnw org.apache.maven.plugins:maven-help-plugin:3.5.1:evaluate -DforceStdout -Dexpression=project.version -q)" >> $GITHUB_OUTPUT
    - name: Verify Android SDK Compatibility
      if: ${{ matrix.release_build }}
      run: ./mvnw -B -q -ff -ntp -DskipTests animal-sniffer:check
    - name: Deploy snapshot
      if: ${{ matrix.release_build && github.event_name != 'pull_request' && endsWith(steps.projectVersion.outputs.version, '-SNAPSHOT') }}
      env:
        CI_DEPLOY_USERNAME: ${{ secrets.CI_DEPLOY_USERNAME3 }}
        CI_DEPLOY_PASSWORD: ${{ secrets.CI_DEPLOY_PASSWORD3 }}
        # MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
      run: ./mvnw -B -q -ff -DskipTests -ntp source:jar deploy
    - name: Generate code coverage 
      if: ${{ matrix.release_build && github.event_name != 'pull_request' }}
      run: ./mvnw -B -q -ff -ntp test
    - name: Publish code coverage
      if: ${{ matrix.release_build && github.event_name != 'pull_request' }}
      uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574 # v5.4.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./target/site/jacoco/jacoco.xml
        flags: unittests

  trigger-dep-build-v2:
    name: Trigger v2 dep builds
    needs: [build]
    # Only for pushes to default branch
    if: ${{ github.event_name == 'push' && github.ref_name == github.event.repository.default_branch }}
    uses: ./.github/workflows/trigger_dep_builds_v2.yml
    secrets:
      token: ${{ secrets.REPO_DISPATCH }}

  trigger-dep-build-v3:
    name: Trigger v3 dep builds
    needs: [build]
    # Only for pushes to default branch
    if: ${{ github.event_name == 'push' && github.ref_name == 'master' }}
    uses: ./.github/workflows/trigger_dep_builds_v3.yml
    secrets:
      token: ${{ secrets.REPO_DISPATCH }}
